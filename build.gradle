group 'coffeecatteam.theultimatetile'
version '0.6-alpha-pre4'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'edu.sc.seis.launch4j'

sourceCompatibility = 1.8

def exeJarName = rootProject.name + "-" + version
def buildPath = "build/" + version
buildDir = file(buildPath)

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'edu.sc.seis.gradle:launch4j:2.4.4'
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://jitpack.io'
    }
}

launch4j {
    outfile = exeJarName + ".exe"
    println("Generating exe file: " + outfile)
    outputDir = "libs"
    companyName = "CoffeeCatTeam"
    mainClassName = 'coffeecatteam.theultimatetile.Launcher'
    icon = "${projectDir}/icon.ico"
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    compile 'club.minnced:java-discord-rpc:2.0.1'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'

    compile fileTree(dir: "libs/jars", include: "*.jar")

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    from configurations.compile.collect { zipTree it }
    manifest {
        attributes 'Main-Class': 'coffeecatteam.theultimatetile.Start'
    }
    exclude("META-INF/*.RSA", "META-INF/*.SF")
}

task copyOptions(type: Copy) {
    println("Copying options.json, saves folder & etc. to " + buildPath + "/libs")
    copy {
        from "data/options.json"
        copy {
            from "data/LICENSE.md"
            from "data/README.txt"
            into buildPath + "/libs"
        }
        copy {
            from  fileTree(dir: "data/icons", include: "*.png")
            into buildPath + "/libs/data/icons"
        }
        copy {
            from "data/saves/saved_games.json"
            into buildPath + "/libs/data/saves"
        }
        copy {
            from fileTree(dir: "libs/natives", include: "*.dll")
            from fileTree(dir: "libs/natives", include: "*.so")
            from fileTree(dir: "libs/natives", include: "*.dylib")
            into buildPath + "/libs/data/natives"
        }
        into buildPath + "/libs/data"
    }
}
